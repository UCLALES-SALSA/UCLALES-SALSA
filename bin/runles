#!/bin/sh

###############################################################
## This jobscript is written for the FMI's Cray XC30 system. 
## Job submission is done at the end of the script. It can do 
## both sequential or parallel runs by adjusting the value 
## IsSeq below. For running on simple linux workstation, set 
## IsSeq=1 and simply run ./runles.
##
## Note: For cluster runs, you most likely need to adjust the
## generation of the file job.sh and the job submission command
## to your local system specifications. 
###############################################################

# -------------------------------------------------- <USER SPECIFIED INFORMATION>
IsSeq=2 # 0 for mpi runs with CRAY, 1 for mpi runs with Puhti, 2 for sequential, 3 for mpi on laptop

EXPNAME="RICO_1_forces"  # Name of the experiment
PROJECT="project_2003163"   # Project name, needed for resource allocation in PUHTI

NPROCS=2          # Number of processors (for IsSeq==0)
NNODES=7
TWALL=48:00:00      # Required wallclock time for batch system

NXP=5               # Number of points in X-direction (including "halo" points)
NYP=80              # Number of points in Y-direction (including "halo" points)
NZP=200              # Number of points in Z-direction
DX=100.              # Resolution in X-direction (meters)
DY=100.              # Resolution in Y-direction (meters)
DZ=20.              # Resolution in Z-direction (meters)
DT=1.               # (max) Timestep length (seconds)
Tspinup=100.        # Length of the spinup period (seconds)
Texp=28800.         # Length of the experiment (seconds)
LEVEL=4             # Thermodynamic level ( 1-3 for bulk microphysics, 4- for SALSA )

# FOR SALSA
ISDTYP=0            # 0: Aerosol size distribution from namelist (uniform across domain),
                    # 1: Read profile from input file. Note that nspec_dry and listspec in SALSA namelist
                    #    must conform with the input data in the file specified below. 
AEROSOL_CASE="aerosol_UAE_SO4_DU_BASIC_RESIDUAL_DUACC.nc"  # If ISDTYP==1, the symbolic link 'aerosol_in.nc' is pointed to this file

# -------------------------------------------------- </USER SPECIFIED INFORMATION>


# --------------------------------------------------------------- <DO NOT CHANGE>
# Get the current version from GIT (if used - this functionality 
# is not available otherwise and a default value is used)
command -v git 2>&1 >/dev/null
if [ $? -eq 0 ]; then
    ver=`git describe --tags 2>&1`
    if [ $? -ne 0 ]; then
	echo "Ignore possible error, git just doesn't find a version tag - using default value"
	ver=vx.x.x
    fi
else
    ver=latest
fi

if [ ${ISDTYP} -eq 1 ]; then
    ln -sf ${AEROSOL_CASE} datafiles/aerosol_in.nc
fi


# ---------------------------------------------------------------- </DO NOT CHANGE>


# Create namelists
cat > NAMELIST <<EOF

&version
  ver="${ver}"
/

! ----------------------------------------------------------------------------------

&model
  level = ${LEVEL}            ! Thermodynamical level
  nxp =   ${NXP}              ! Number of points in x direction
  nyp =   ${NYP}              ! Number of points in y direction
  nzp =   ${NZP}              ! Number of vertical levels
  deltax = ${DX}              ! Grid spacing in x
  deltay = ${DY}              ! Grid spacing in y
  deltaz = ${DZ}              ! Grid spacing in the vertical
  nxpart = .TRUE.             ! 
  dzmax  = 1500.              ! Height above which start stretching vertical grid
  dzrat  = 1.0                ! Factor for vertical grid stretching
  dtlong = ${DT}              ! Max. timestep
  distim = 100.               ! Timescale for the dissipation in sponge layer
  timmax = ${Texp}            ! Length of the simulation
  runtype = "INITIAL"         ! INITIAL or HISTORY (restart) run
  CCN = 100.e6                ! 
  corflg = .false.            ! Apply coriolis force
  prndtl = -0.333333         !
  filprf = '${EXPNAME}'       ! Output filename profile
  hfilin = 'UAE_Cu_restart_6.014400s' ! History file name
  frqhis = 3600.
  !mcflg = .FALSE.             ! Do mass conservation statistics

  sed_aero%switch = .FALSE.          ! Calculate sedimentation of aerosol particles
  sed_cloud%switch = .TRUE.          ! - '' - cloud droplets
  sed_cloud%delay = ${Tspinup}
  sed_precp%switch = .TRUE.          ! precipitation
  sed_precp%delay = ${Tspinup}  
  sed_ice%switch = .TRUE.            ! ice particles
  bulk_autoc%switch = .TRUE.
  bulk_autoc%delay = ${Tspinup}      ! Autoconversion switch for level = 1-3

  lnudging = .FALSE.           ! Master swtich for nudging scheme
  lemission = .FALSE.          ! Master switch for aerosol emissions  
  lpback = .FALSE.
  iradtyp = 1                 ! Radiation/large scale forcing
  strtim = 334.25               ! Start time
  case_name = 'rico'       ! Case name for large-scale forcing schemes
  !div = 1.e-6               ! Large-scale divergence
  cntlat = 20.0
/

! -----------------------------------------------------------------------------------

&output
  breakUndefOutput = .TRUE.
  ps_intvl = 60.
  ts_intvl = 60.
  main_intvl = 120.
  varlist_main = 'temp','theta','wwind','rp','rc','srp','rrate','pb_rc','pb_rpp','pb_npp','pb_rrate','CDNC','Np' 
  varlist_ps = 'rrate','pr_rrate','pb_rrate','pr_pb_rrate','rc','ic_rc','pb_rc','ic_pb_rc','CDNC','ic_CDNC','Np','pr_Np'
  varlist_ts = 'sfcrrate','pr_sfcrrate','pb_sfcrrate'!,'pr_pb_sfcrrate'
  TH_rrate = 30.
  TH_rc = 1.e-5
  TH_rr = 1.e-6
/

! -----------------------------------------------------------------------------------

&initialization
  init_type         = 1       ! 1: random perturbations, 2: warm bubble
  bubble_center     = 1000.,0.,0.
  bubble_diameter   = 1500.,6000.,6000.
  bubble_temp_ampl  = 1.5
  iseed             = 3
  th00              = 295.    ! Reference temperature
  umean             = 0.                
  vmean             = 0.
  itsflg            = 0       ! Flag for temperature type in input sounding
  ipsflg            = 1       ! - '' - for pressure
/

! -------------------------------------------------------------------------------------

&surface
  isfctyp           = 3       ! This is not entirely accurate for momentum vs vanZanten et al. 2011
  zrough            = 0.0002
  ubmin             = -0.25
  sst               = 299.8
  dthcon            = 0.001094 ! with isfctyp these are the bulk formula coefficients
  drtcon            = 0.00133
  !C_heat            = 2.e6
  !deepSoilTemp      = 299.8
  !W1                = 0.1
  !W2                = 0.1
  !W3                = 0.1
  lConstSoilWater   = .TRUE.
  lConstSoilHeatCap = .TRUE. 
/

! ------------------------------------------------------------------------------------

&radiation
  radsounding = 'datafiles/ktrop.lay'  
  sfc_albedo = 0.1
  laerorad = .FALSE. 
  useMcICA = .TRUE.
/

! -------------------------------------------------------------------------------------

 ! With lnudging = .TRUE.
&nudge
  nudge_time = 7200.          ! Overall time for nudging from the start of the simulation
  ndg_theta%nudgetype = 1
  ndg_theta%tau_type = 2      ! Type of relaxation time (0:constant, 1-3: increasing)
  ndg_theta%tau_min = 60.    ! Min relaxation time (with tau_type=1-3 and constant tau)
  ndg_theta%tau_max = 3600.   ! Max relaxation time (with tau_type=1-3)
  ndg_theta%tau_max_continue = .FALSE.
/

! ---------------------------------------------------------------------------------------

 ! With lemission = .TRUE. and level >= 4
&emission

  nEmissionModes = 2

  !emitModes(1)%emitType = 3
  !emitModes(1)%regime = 2
  !emitModes(1)%start_time = 200.
  !emitModes(1)%end_time = 7201.
  !emitModes(1)%species = "SS"
  !emitModes(1)%emitHeightMin = 600.
  !emitModes(1)%emitHeightMax = 650.
  !emitModes(1)%emitSizeDistType = 2
  !emitModes(1)%emitDiam = 0.6e-6
  !emitModes(1)%emitNum = 10.5e7
  !emitModes(1)%emitSigma = 1.1
  !emitModes(1)%emitMap = 'emitMap_1'
  !emitModes(1)%scS = 60.
  !emitModes(1)%z_expan_up = 3
  !emitModes(1)%z_expan_dw = 2

  emitModes(1)%emitType = 2
  emitModes(1)%regime = 2
  emitModes(1)%start_time = 15000.
  emitModes(1)%end_time = 15001.
  emitModes(1)%species = "SO4"
  emitModes(1)%emitHeightMin = 5450.
  emitModes(1)%emitHeightMax = 5550.
  emitModes(1)%emitSizeDistType = 2
  emitModes(1)%emitDiam = 1.5e-6
  emitModes(1)%emitNum = 5.e6
  emitModes(1)%emitSigma = 1.3

  emitModes(2)%emitType = 2
  emitModes(2)%regime = 2
  emitModes(2)%start_time = 15000.
  emitModes(2)%end_time = 15001.
  emitModes(2)%species = "SO4"
  emitModes(2)%emitHeightMin = 5450.
  emitModes(2)%emitHeightMax = 5550.
  emitModes(2)%emitSizeDistType = 2
  emitModes(2)%emitDiam = 8.0e-6
  emitModes(2)%emitNum = 5.e6
  emitModes(2)%emitSigma = 1.6


/

! -----------------------------------------------------------------------------------------

 ! With level >= 4
&salsa	


   ! Master process switches
   lscoag%switch = .TRUE.
   lscoag%delay = ${Tspinup}

   lscnd%switch = .TRUE.

   lsauto%switch = .TRUE.
   lsauto%delay = ${Tspinup}
   lsauto%mode = 1    ! 1: precip formation based on coagulation, 2: parameterized autoconversion

   lsactiv%switch = .TRUE.
   lsactiv%mode = 1   ! 1: aerosol growth based activation, 2: parameterized cloud base activation

   lsicenucl%switch = .TRUE.
   lsicenucl%delay = 100.

   lsicemelt%switch = .TRUE.       ! Ice melting

   lssecice%switch = .TRUE.        ! Secondary ice production
   lssecice%delay = 200.

   ! Sub-process switches: Coagulation
   lscgcc = .TRUE.       ! Self-collection of cloud droplets
   lscgpp = .TRUE.       ! Self-collection of rain drops
   lscgpc = .TRUE.       ! Rain collection of cloud droplets
   lscgaa = .FALSE.       ! Aerosol coagulation
   lscgca = .TRUE.       ! Cloud collection of aerosols
   lscgpa = .TRUE.       ! Rain collection of aerosols
   lscgia = .TRUE.       ! Ice collection of aerosols
   lscgic = .TRUE.       ! Ice collection of cloud droplets
   lscgii = .TRUE.       ! Self-collection of ice
   lscgip = .TRUE.       ! Ice collection of rain drops

   ! Sub-process switches: Condensation
   lscndgas    = .FALSE.  ! --Aerosol precursor gas codensation
   lscndh2oae  = .TRUE.  ! --Condensation of water on aerosols (if FALSE, equilibrium assumed)
   lscndh2ocl  = .TRUE.  ! --Condensation of water on cloud droplets (and drizzle)
   lscndh2oic  = .TRUE.  ! --Condensation of water on ice particles

   ! Sub-process switches: Ice nucleation
   ice_hom     = .TRUE.        ! Homogeneous freezing   
   ice_imm     = .TRUE.        ! Immersion freezing
   ice_dep     = .TRUE.        ! Deposition freezing
   ice_theta_dist = .TRUE.     ! Use contact angle distribution for the IN population

   ! Sub-process swithces: Secondary ice
   ice_halmos = .TRUE.         ! Rime splintering; Hallet-Mossop

   ! Misc switches
   lscheckarrays = .FALSE.
   lsdistupdate = .TRUE.

   ! Some useful switches for spinup and initilization
   lsfreeRH%switch = .TRUE.       ! Use freely evolving RH. If FALSE, RH is limited by rhlim through entire simulation
   lsfreeRH%delay = ${Tspinup}    ! Time until which RH is limited by rhlim, in case lsfreeRH%swithc == TRUE
   rhlim = 1.005                  ! RH limit for SALSA during initialization and spinup

   lsfreeTheta%switch = .TRUE.    ! Use freely evolving lower limit in contact angle integration for ice nucleation
   lsfreeTheta%delay = 0.         ! Time until which lower limit theta is set to be at least initMinTheta, in case lsfreeTheta%switch == TRUE
   initMinTheta = 0.             ! Lower limit for contact angle integration in degrees for initialization and spinup
   
   ! Parameters for ice nucleation contact angle distributions (used with ice_theta_dist == TRUE)
   mean_theta = 132.    ! Distribution mean
   sigma_theta = 20.    ! Standard deviation

   ! m-D and A-D parameters for non-spherical ice
   iceShapeAlpha = 15.56999e-3   ! m = ALPHA * D**beta
   iceShapeBeta = 2.02           ! m = alpha * D**BETA
   iceShapeGamma = 0.55          ! A = GAMMA * D**sigma
   iceShapeSigma = 1.97          ! A = gamma * D**SIGMA

   ! Precipitation bin layout parameters
   bloPrc%nbins     = 20        ! Number of bins
   bloPrc%dlo       = 20.e-6    ! Lower limit of the smallest bin
   bloPrc%vol_ratio = 2.        ! Volume ratio between bins

   ! Ice bin layout parameters
   bloIce%nbins     = 20        ! Number of bins
   bloIce%dlo       = 2.e-6    ! Lower limit of the smallest bin
   bloIce%vol_ratio = 3.        ! Volume ratio between bins

   ! Initial aerosol size distributions
   nspec_dry = 1
   listspec = 'SO4','','','','','',''

   isdtyp = ${ISDTYP}
   ! The number of entries must comply with the max number of _compounds_ (excluding water, currently 7)
   volDistA = 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
   ! The number of entries must comply with the max number of _modes_ (currently 7)  
   sigmagA  = 1.28, 1.75, 1.5, 2.0, 2.0, 2.0, 2.0      ! Geometric stdev for initial aerosol size distribution for isdtyp == 0 (uniform)  
   dpgA     = 0.06, 0.28, 1.0, 0.2, 0.2, 0.2, 0.2   ! Mode mean diameters in micrometers
   nA       = 76., 13., 0., 0., 0., 0., 0.         ! Mode number concentrations in #/mg 

   ! The number of entries must comply with the max number of _compounds_ (excluding water, currently 7)
   volDistB = 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
   ! The number of entries must comply with the max number of _modes_ (currently 7)
   sigmagB  = 1.2, 1.7, 1.6, 2.0, 2.0, 2.0, 2.0      ! Geometric stdev for initial aerosol size distribution for isdtyp == 0 (uniform) 
   dpgB     = 0.022, 0.12, 1.8, 0.2, 0.2, 0.2, 0.2   ! Mode mean diameters in micrometers
   nB       = 0., 0., 0., 0., 0., 0., 0.             ! Mode number concentrations in #/mg 
/

EOF

if [ $IsSeq -eq 0 ]; then

# The stuff below depends entirely on your system specifics #
cat > job.sh <<EOF
#! /bin/sh
#PBS -N ${EXPNAME}
#PBS -l mppwidth=${NPROCS}
#PBS -l mppnppn=28
#PBS -l walltime=${TWALL}

export MPICH_ENV_DISPLAY=1
cd \$PBS_O_WORKDIR

aprun -n ${NPROCS} ./les.mpi | tee uclales-salsa.output

set -ex

EOF

qsub job.sh

elif [ $IsSeq -eq 1 ]; then

cat > job.sh <<EOF
#!/bin/sh
#SBATCH --job-name=${EXPNAME}
#SBATCH --account=${PROJECT}
#SBATCH --time=${TWALL}
#SBATCH --mem-per-cpu=2G
#SBATCH --partition=fmi
#SBATCH --ntasks=${NPROCS}
#SBATCH --nodes=${NNODES}

module load intel-mpi
module load netcdf-fortran

srun les.mpi 

EOF

sbatch job.sh

elif [ $IsSeq -eq 2 ]; then
    ./les.seq
elif [ $IsSeq -eq 3 ]; then
    mpirun -np ${NPROCS} ./les.mpi
fi
